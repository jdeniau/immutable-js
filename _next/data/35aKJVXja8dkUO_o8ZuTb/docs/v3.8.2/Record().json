{"pageProps":{"versions":["v4.0.0-rc.12","v3.8.2","latest@main"],"version":"v3.8.2","def":{"qualifiedName":"Record","doc":{"synopsis":"<p>Creates a new Class which produces Record instances. A record is similar to\na JS object, but enforce a specific set of allowed string keys, and have\ndefault values.</p>\n","description":"<code class=\"codeBlock\"><span class=\"token keyword\" >var</span> ABRecord <span class=\"token operator\" >=</span> <span class=\"token qualifier\" >Record</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>a<span class=\"token punctuation\" >:</span><span class=\"token number\" >1</span><span class=\"token punctuation\" >,</span> b<span class=\"token punctuation\" >:</span><span class=\"token number\" >2</span><span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span>\n<span class=\"token keyword\" >var</span> myRecord <span class=\"token operator\" >=</span> <span class=\"token keyword\" >new</span> <span class=\"token class-name\" >ABRecord</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>b<span class=\"token punctuation\" >:</span><span class=\"token number\" >3</span><span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span></code><p>Records always have a value for the keys they define. <code>remove</code>ing a key\nfrom a record simply resets it to the default value for that key.</p>\n<code class=\"codeBlock\">myRecord<span class=\"token punctuation\" >.</span>size <span class=\"token comment\" spellcheck=\"true\">// 2\n</span>myRecord<span class=\"token punctuation\" >.</span><span class=\"token keyword\" >get</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'a'</span><span class=\"token punctuation\" >)</span> <span class=\"token comment\" spellcheck=\"true\">// 1\n</span>myRecord<span class=\"token punctuation\" >.</span><span class=\"token keyword\" >get</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'b'</span><span class=\"token punctuation\" >)</span> <span class=\"token comment\" spellcheck=\"true\">// 3\n</span>myRecordWithoutB <span class=\"token operator\" >=</span> myRecord<span class=\"token punctuation\" >.</span>remove<span class=\"token punctuation\" >(</span><span class=\"token string\" >'b'</span><span class=\"token punctuation\" >)</span>\nmyRecordWithoutB<span class=\"token punctuation\" >.</span><span class=\"token keyword\" >get</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'b'</span><span class=\"token punctuation\" >)</span> <span class=\"token comment\" spellcheck=\"true\">// 2\n</span>myRecordWithoutB<span class=\"token punctuation\" >.</span>size <span class=\"token comment\" spellcheck=\"true\">// 2</span></code><p>Values provided to the constructor not found in the Record type will\nbe ignored. For example, in this case, ABRecord is provided a key &quot;x&quot; even\nthough only &quot;a&quot; and &quot;b&quot; have been defined. The value for &quot;x&quot; will be\nignored for this record.</p>\n<code class=\"codeBlock\"><span class=\"token keyword\" >var</span> myRecord <span class=\"token operator\" >=</span> <span class=\"token keyword\" >new</span> <span class=\"token class-name\" >ABRecord</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>b<span class=\"token punctuation\" >:</span><span class=\"token number\" >3</span><span class=\"token punctuation\" >,</span> x<span class=\"token punctuation\" >:</span><span class=\"token number\" >10</span><span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span>\nmyRecord<span class=\"token punctuation\" >.</span><span class=\"token keyword\" >get</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'x'</span><span class=\"token punctuation\" >)</span> <span class=\"token comment\" spellcheck=\"true\">// undefined</span></code><p>Because Records have a known set of string keys, property get access works\nas expected, however property sets will throw an Error.</p>\n<p>Note: IE8 does not support property access. Only use <code><span class=\"token keyword\" >get</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span></code> when\nsupporting IE8.</p>\n<code class=\"codeBlock\">myRecord<span class=\"token punctuation\" >.</span>b <span class=\"token comment\" spellcheck=\"true\">// 3\n</span>myRecord<span class=\"token punctuation\" >.</span>b <span class=\"token operator\" >=</span> <span class=\"token number\" >5</span> <span class=\"token comment\" spellcheck=\"true\">// throws Error</span></code><p>Record Classes can be extended as well, allowing for custom methods on your\nRecord. This is not a common pattern in functional environments, but is in\nmany JS programs.</p>\n<p>Note: TypeScript does not support this type of subclassing.</p>\n<code class=\"codeBlock\"><span class=\"token keyword\" >class</span> <span class=\"token class-name\" >ABRecord</span> <span class=\"token keyword\" >extends</span> <span class=\"token class-name\" >Record</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>a<span class=\"token punctuation\" >:</span><span class=\"token number\" >1</span><span class=\"token punctuation\" >,</span>b<span class=\"token punctuation\" >:</span><span class=\"token number\" >2</span><span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n  getAB<span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >return</span> <span class=\"token var\" >this</span><span class=\"token punctuation\" >.</span>a <span class=\"token operator\" >+</span> <span class=\"token var\" >this</span><span class=\"token punctuation\" >.</span>b<span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span>\n<span class=\"token punctuation\" >}</span>\n\n<span class=\"token keyword\" >var</span> myRecord <span class=\"token operator\" >=</span> <span class=\"token keyword\" >new</span> <span class=\"token class-name\" >ABRecord</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>b<span class=\"token punctuation\" >:</span> <span class=\"token number\" >3</span><span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span>\nmyRecord<span class=\"token punctuation\" >.</span>getAB<span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token comment\" spellcheck=\"true\">// 4</span></code>","notes":[]},"call":{"name":"Record","label":"Record()","id":"Record()","signatures":[{"line":1142,"params":[{"name":"defaultValues","type":{"k":8,"members":[{"index":true,"params":[{"name":"key","type":{"k":7}}],"type":{"k":1}}]}},{"name":"name","type":{"k":7},"optional":true}],"type":{"k":12,"name":"Record.Class","url":"/docs/v3.8.2/Record.Class"}}],"url":"/docs/v3.8.2/Record()"},"label":"Record()","url":"/docs/v3.8.2/Record()"},"sidebarLinks":[{"label":"fromJS()","url":"/docs/v3.8.2/fromJS()"},{"label":"is()","url":"/docs/v3.8.2/is()"},{"label":"List","url":"/docs/v3.8.2/List"},{"label":"Map","url":"/docs/v3.8.2/Map"},{"label":"OrderedMap","url":"/docs/v3.8.2/OrderedMap"},{"label":"Set","url":"/docs/v3.8.2/Set"},{"label":"OrderedSet","url":"/docs/v3.8.2/OrderedSet"},{"label":"Stack","url":"/docs/v3.8.2/Stack"},{"label":"Range()","url":"/docs/v3.8.2/Range()"},{"label":"Repeat()","url":"/docs/v3.8.2/Repeat()"},{"label":"Record()","url":"/docs/v3.8.2/Record()"},{"label":"Record.Class","url":"/docs/v3.8.2/Record.Class"},{"label":"Seq","url":"/docs/v3.8.2/Seq"},{"label":"Seq.Keyed","url":"/docs/v3.8.2/Seq.Keyed"},{"label":"Seq.Indexed","url":"/docs/v3.8.2/Seq.Indexed"},{"label":"Seq.Set","url":"/docs/v3.8.2/Seq.Set"},{"label":"Iterable","url":"/docs/v3.8.2/Iterable"},{"label":"Iterable.Keyed","url":"/docs/v3.8.2/Iterable.Keyed"},{"label":"Iterable.Indexed","url":"/docs/v3.8.2/Iterable.Indexed"},{"label":"Iterable.Set","url":"/docs/v3.8.2/Iterable.Set"},{"label":"Collection","url":"/docs/v3.8.2/Collection"},{"label":"Collection.Keyed","url":"/docs/v3.8.2/Collection.Keyed"},{"label":"Collection.Indexed","url":"/docs/v3.8.2/Collection.Indexed"},{"label":"Collection.Set","url":"/docs/v3.8.2/Collection.Set"}]},"__N_SSG":true}